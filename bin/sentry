#!/usr/bin/env bash

# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

bin=`dirname "$0"`
myhome=`cd "$bin/.."; pwd`
RUN_CONFIG_TOOL=0

# the root of the Hive installation
if [[ -z $SENTRY_HOME ]] ; then
  export SENTRY_HOME=$myhome
fi

MAPR_HOME_DIR="/opt/mapr"
MAPR_CONF_DIR=${MAPR_HOME_DIR}/conf
MAPR_LIB_DIR=${MAPR_HOME_DIR}/lib

env=${MAPR_CONF_DIR}/env.sh
[ -f $env ] && . $env

if [[ ${HADOOP_HOME} = "" ]]; then
  BASEMAPR=${MAPR_HOME:-/opt/mapr}
  if [ -f ${BASEMAPR}/conf/hadoop_version ]; then
      hadoop_mode=`cat ${BASEMAPR}/conf/hadoop_version | grep default_mode | cut -d '=' -f 2`
	  if [ "$hadoop_mode" = "yarn" ]; then
		version=`cat ${BASEMAPR}/conf/hadoop_version | grep yarn_version | cut -d '=' -f 2`
		HADOOP_VERSION="hadoop-$version"
	  elif [ "$hadoop_mode" = "classic" ]; then
		version=`cat ${BASEMAPR}/conf/hadoop_version | grep classic_version | cut -d '=' -f 2`
		HADOOP_VERSION="hadoop-$version"
	else
		echo 'Unknown hadoop version'
	fi
  else
    CMD="hadoop version"
    res=`eval $CMD`
    HADOOP_VERSION=`readlink \`which hadoop\` | awk -F "/" '{print$5}'`
    version=`echo ${HADOOP_VERSION} | cut -d'-' -f 2`
  fi
  export HADOOP_HOME=${BASEMAPR}/hadoop/${HADOOP_VERSION}
fi

HADOOP=$HADOOP_HOME/bin/hadoop
if [ ! -f ${HADOOP} ]; then
  echo "Cannot find hadoop installation: \$HADOOP_HOME or \$HADOOP_PREFIX must be set or hadoop must be in the path";
  exit 4;
fi

# If we are running config-tool then invoke it via separate script. It needs Hive classpatch and config
args=()
while [ $# -gt 0 ]; do    # Until you run out of parameters . . .
  case "$1" in
    --command)
      if [ "$2" = "config-tool" ]
      then
        RUN_CONFIG_TOOL=1
      fi
      args+=" $1"
      shift
      ;;
    *)
      args+=" $1"
      shift
      ;;
  esac
done
export HADOOP_OPTS="$HADOOP_OPTS ${MAPR_ECOSYSTEM_SERVER_LOGIN_OPTS}"
export _CMD_JAR=sentry-core-common-*.jar
for f in ${SENTRY_HOME}/lib/*.jar; do
  HADOOP_CLASSPATH=${HADOOP_CLASSPATH}:${f}
done
export HADOOP_CLASSPATH
export RUN_CONFIG_TOOL
if [ "${RUN_CONFIG_TOOL}" = "0" ]
then
  for f in ${SENTRY_HOME}/lib/server/*.jar; do
    HADOOP_CLASSPATH=${HADOOP_CLASSPATH}:${f}
  done
  for f in ${SENTRY_HOME}/lib/plugins/*.jar; do
    HADOOP_CLASSPATH=${HADOOP_CLASSPATH}:${f}
  done
  exec $HADOOP jar ${SENTRY_HOME}/lib/${_CMD_JAR} org.apache.sentry.SentryMain ${args[@]}
else
  exec ${SENTRY_HOME}/bin/config_tool ${args[@]}
fi

